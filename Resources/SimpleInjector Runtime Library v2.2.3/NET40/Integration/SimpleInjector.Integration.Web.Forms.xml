<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimpleInjector.Integration.Web.Forms</name>
    </assembly>
    <members>
        <member name="T:SimpleInjector.SimpleInjectorWebFormExtensions">
            <summary>
            Extension methods for integrating Simple Injector with ASP.NET Web Forms applications.
            </summary>
        </member>
        <member name="M:SimpleInjector.SimpleInjectorWebFormExtensions.RegisterPages(SimpleInjector.Container)">
            <summary>
            Registers the <see cref="T:System.Web.UI.Page"/> instances that are declared as public concrete types in
            the set of assemblies that can be found in the application's bin folder. The types will be
            registered as concrete transient.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:SimpleInjector.SimpleInjectorWebFormExtensions.RegisterPages(SimpleInjector.Container,System.Reflection.Assembly[])">
            <summary>
            Registers the <see cref="T:System.Web.UI.Page"/> instances that are declared as public concrete types in the 
            supplied set of <paramref name="assemblies"/>. The types will be registered as concrete transient.
            </summary>
            <param name="container">The container.</param>
            <param name="assemblies">The assemblies.</param>
        </member>
        <member name="M:SimpleInjector.SimpleInjectorWebFormExtensions.RegisterPages(SimpleInjector.Container,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Registers the <see cref="T:System.Web.UI.Page"/> instances that are declared as public concrete types in the 
            supplied set of <paramref name="assemblies"/>. The types will be registered as concrete transient.
            </summary>
            <param name="container">The container.</param>
            <param name="assemblies">The assemblies.</param>
        </member>
        <member name="M:SimpleInjector.SimpleInjectorWebFormExtensions.RegisterUserControls(SimpleInjector.Container)">
            <summary>
            Registers the <see cref="T:System.Web.UI.UserControl"/> instances that are declared as public concrete 
            types in the set of assemblies that can be found in the application's bin folder.
            The types will be registered as concrete transient.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:SimpleInjector.SimpleInjectorWebFormExtensions.RegisterUserControls(SimpleInjector.Container,System.Reflection.Assembly[])">
            <summary>
            Registers the <see cref="T:System.Web.UI.UserControl"/> instances that are declared as public concrete 
            types in the supplied set of <paramref name="assemblies"/>.
            The types will be registered as concrete transient.
            </summary>
            <param name="container">The container.</param>
            <param name="assemblies">The assemblies.</param>
        </member>
        <member name="M:SimpleInjector.SimpleInjectorWebFormExtensions.RegisterUserControls(SimpleInjector.Container,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Registers the <see cref="T:System.Web.UI.UserControl"/> instances that are declared as public concrete transient 
            types in the supplied set of <paramref name="assemblies"/>.
            The types will be registered as concrete transient.
            </summary>
            <param name="container">The container.</param>
            <param name="assemblies">The assemblies.</param>
        </member>
        <member name="M:SimpleInjector.SimpleInjectorWebFormExtensions.RegisterHttpHandlers(SimpleInjector.Container)">
            <summary>
            Registers all concrete <see cref="T:System.Web.IHttpHandler"/> implementations (except <see cref="T:System.Web.UI.Page"/> and
            <see cref="T:System.Web.HttpApplication"/> implementations) that are declared as public concrete  
            types in the set of assemblies that can be found in the application's bin folder.
            The types will be registered as concrete transient.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:SimpleInjector.SimpleInjectorWebFormExtensions.RegisterHttpHandlers(SimpleInjector.Container,System.Reflection.Assembly[])">
            <summary>
            Registers all concrete <see cref="T:System.Web.IHttpHandler"/> implementations (except <see cref="T:System.Web.UI.Page"/> and
            <see cref="T:System.Web.HttpApplication"/> implementations) that are declared as public concrete  
            types in the supplied set of <paramref name="assemblies"/>.
            The types will be registered as concrete transient.
            </summary>
            <param name="container">The container.</param>
            <param name="assemblies">The assemblies.</param>
        </member>
        <member name="M:SimpleInjector.SimpleInjectorWebFormExtensions.RegisterHttpHandlers(SimpleInjector.Container,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Registers all concrete <see cref="T:System.Web.IHttpHandler"/> implementations (except <see cref="T:System.Web.UI.Page"/> and
            <see cref="T:System.Web.HttpApplication"/> implementations) that are declared as public concrete  
            types in the supplied set of <paramref name="assemblies"/>.
            The types will be registered as concrete transient.
            </summary>
            <param name="container">The container.</param>
            <param name="assemblies">The assemblies.</param>
        </member>
        <member name="T:SimpleInjector.Integration.Web.Forms.SimpleInjectorWebFormsHttpModule">
            <summary>
            Simple Injector ASP.NET Web Forms integration HTTP Module. This module can be registered in an ASP.NET
            Web Forms application and allows automatic initialization of 
            the assembly of this class is included in the application's bin folder. The module will trigger the
            disposing of created instances that are flagged as needing to be disposed at the end of the web 
            request.
            </summary>
        </member>
        <member name="M:SimpleInjector.Integration.Web.Forms.SimpleInjectorWebFormsHttpModule.SetContainer(SimpleInjector.Container)">
            <summary>Sets the <see cref="F:SimpleInjector.Integration.Web.Forms.SimpleInjectorWebFormsHttpModule.container"/> instance for this module to use.</summary>
            <param name="container">The container instance.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="container"/> is a null
            reference (Nothing in VB).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when this operation is called twice.</exception>
        </member>
        <member name="M:SimpleInjector.Integration.Web.Forms.SimpleInjectorWebFormsHttpModule.Dispose">
            <summary>Disposes of the resources (other than memory) used by this module.</summary>
        </member>
        <member name="M:SimpleInjector.Integration.Web.Forms.SimpleInjectorWebFormsHttpModule.Init(System.Web.HttpApplication)">
            <summary>Initializes a module and prepares it to handle requests.</summary>
            <param name="context">An <see cref="T:System.Web.HttpApplication"/> that provides access to the methods, 
            properties, and events common to all application objects within an ASP.NET application.</param>
        </member>
        <member name="M:SimpleInjector.Integration.Web.Forms.SimpleInjectorWebFormsHttpModule.GetContainer">
            <summary>
            Returns the <see cref="F:SimpleInjector.Integration.Web.Forms.SimpleInjectorWebFormsHttpModule.container"/> instance that is registered using <see cref="M:SimpleInjector.Integration.Web.Forms.SimpleInjectorWebFormsHttpModule.SetContainer(SimpleInjector.Container)"/>.
            Inheritors can override this property to allow returning different container instances based on
            some condition (request information for instance). This is useful for multi-tenant applications.
            </summary>
            <returns>The container instance.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when <see cref="M:SimpleInjector.Integration.Web.Forms.SimpleInjectorWebFormsHttpModule.SetContainer(SimpleInjector.Container)"/> hasn't been
            called.</exception>
            <value>The method should never return null.</value>
        </member>
        <member name="T:SimpleInjector.Integration.Web.Forms.WebFormsPropertySelectionBehavior">
            <summary>
            Defines the behavior for selecting properties for <see cref="T:System.Web.UI.UserControl"/>, <see cref="T:System.Web.UI.Page"/> types
            and <see cref="T:System.Web.IHttpHandler"/> implementations for ASP.NET Web Forms integration scenarios.
            </summary>
            <example>
            The following example shows the usage of the <b>WebFormsPropertySelectionBehavior</b> class:
            <code lang="cs"><![CDATA[
            var container = new Container();
            
            container.Options.PropertySelectionBehavior =
                new WebFormsPropertySelectionBehavior(container.Options.PropertySelectionBehavior);
            ]]></code>
            </example>
        </member>
        <member name="M:SimpleInjector.Integration.Web.Forms.WebFormsPropertySelectionBehavior.#ctor(SimpleInjector.Advanced.IPropertySelectionBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:SimpleInjector.Integration.Web.Forms.WebFormsPropertySelectionBehavior"/> class.
            </summary>
            <param name="baseBehavior">The original behavior that this instance wraps.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="baseBehavior"/> is a null
            reference (Nothing in VB).</exception>
        </member>
    </members>
</doc>
