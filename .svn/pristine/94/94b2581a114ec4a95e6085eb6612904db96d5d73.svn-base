using System.Web.Http;
using System.Web.Mvc;
using Infostructure.MyBigBro.BusinessLogic.Services;
using Infostructure.MyBigBro.DataModel.DataAccess;
using Infostructure.MyBigBro.Web.Controllers;
using Infostructure.MyBigBro.Web.Properties;
using Microsoft.Practices.Unity;
using Unity.Mvc3;

namespace Infostructure.MyBigBro.Web
{
    public static class Bootstrapper
    {
        public static void Initialise()
        {
            var container = BuildUnityContainer();

            DependencyResolver.SetResolver(new UnityDependencyResolver(container));

            GlobalConfiguration.Configuration.DependencyResolver = new Unity.WebApi.UnityDependencyResolver(container);
        }

        private static IUnityContainer BuildUnityContainer()
        {
            var container = new UnityContainer();

            // Register services.
            container.RegisterType<IGeoMarkerService, GeoMarkerService>();
            container.RegisterType<IAccountService, AccountService>();
            container.RegisterType<IFormsAuthenticationService, FormsAuthenticationService>();

            // Register Web API controllers.
            container.RegisterType<IController, LoginController>();
            container.RegisterType<GeoMarkersController>();
            container.RegisterType<WebCamsController>();
            container.RegisterType<CapturedImagesGeoMarkerController>();

            // Register database components.
            var settings = new Settings();
            var connectionString = "";
#if DEBUG
            connectionString = settings.connectionStringLocal;
#else
            connectionString = settings.connectionStringHosting;
#endif
            container.RegisterType<IMyBigBroRepository, MyBigBroRepository>(
                new InjectionConstructor(new MyBigBroContext(connectionString)));           

            // Return the populated container.
            return container;
        }
    }
}